{"ast":null,"code":"var _jsxFileName = \"/home/cactus/inventory-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport Dashboard from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    navigate('/dashboard');\n  };\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      padding: \"2rem\",\n      backgroundColor: \"#f7fafc\"\n    },\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginPage, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"KN3Kzl+xbVDEK6g7j5ANJnQKP3k=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nfunction AppWrapper() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c2 = AppWrapper;\nexport default AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","useNavigate","LoginPage","Dashboard","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","navigate","handleLogin","handleLogout","style","minHeight","padding","backgroundColor","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","_c","AppWrapper","path","element","_c2","$RefreshReg$"],"sources":["/home/cactus/inventory-web/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from 'react-router-dom';\nimport LoginPage from './LoginPage';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n    navigate('/dashboard');\n  };\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    navigate('/');\n  };\n\n  return (\n    <div style={{ minHeight: \"100vh\", padding: \"2rem\", backgroundColor: \"#f7fafc\" }}>\n      {!isLoggedIn ? (\n        <LoginPage onLogin={handleLogin} />\n      ) : (\n        <Dashboard onLogout={handleLogout} />\n      )}\n    </div>\n  );\n}\n\nfunction AppWrapper() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />} />\n        <Route path=\"/dashboard\" element={<App />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default AppWrapper;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMc,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxBF,aAAa,CAAC,IAAI,CAAC;IACnBC,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzBH,aAAa,CAAC,KAAK,CAAC;IACpBC,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,oBACEL,OAAA;IAAKQ,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,eAAe,EAAE;IAAU,CAAE;IAAAC,QAAA,EAC7E,CAACT,UAAU,gBACVH,OAAA,CAACH,SAAS;MAACgB,OAAO,EAAEP;IAAY;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEnCjB,OAAA,CAACF,SAAS;MAACoB,QAAQ,EAAEX;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAvBQD,GAAG;EAAA,QAEOL,WAAW;AAAA;AAAAuB,EAAA,GAFrBlB,GAAG;AAyBZ,SAASmB,UAAUA,CAAA,EAAG;EACpB,oBACEpB,OAAA,CAACP,MAAM;IAAAmB,QAAA,eACLZ,OAAA,CAACL,MAAM;MAAAiB,QAAA,gBACLZ,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEtB,OAAA,CAACC,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpCjB,OAAA,CAACN,KAAK;QAAC2B,IAAI,EAAC,YAAY;QAACC,OAAO,eAAEtB,OAAA,CAACC,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACM,GAAA,GATQH,UAAU;AAWnB,eAAeA,UAAU;AAAC,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}